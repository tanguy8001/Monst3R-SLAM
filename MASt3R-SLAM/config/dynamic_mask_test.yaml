use_calib: False
single_thread: False
use_dynamic_mask: True
dynamic_mask_threshold: 0.35
refine_dynamic_mask_with_sam2: True
# Debug visualization options:
# - debug_save_dynamic_mask: Saves 2D dynamic masks overlaid on original images
# - debug_save_final_valid_opt_mask: Saves final optimization masks  
# - debug_save_pointmap_visualization: Saves before/after pointmap comparisons (depth & confidence)
# - debug_save_3d_pointclouds: Saves 3D point cloud visualizations (computationally expensive)
debug_save_dynamic_mask: True
debug_save_final_valid_opt_mask: True
debug_save_pointmap_visualization: True
debug_save_3d_pointclouds: False

dataset:
  subsample: 1
  img_downsample: 1
  center_principle_point: True

matching:
  max_iter: 10
  lambda_init: 1e-8
  convergence_thresh: 1e-6
  dist_thresh: 1e-1 # distance in 3D space
  radius: 3
  dilation_max: 5 # Right now starts from max and iteratively decreases until 1

tracking:
  min_match_frac: 0.05
  max_iters: 50
  C_conf: 0.0
  Q_conf: 1.5
  rel_error: 1e-3
  delta_norm: 1e-3
  huber: 1.345
  match_frac_thresh: 0.333
  sigma_ray: 0.003
  sigma_dist: 1e+1
  sigma_pixel: 1.0
  sigma_depth: 1e+1 # NOTE: log-depth!
  sigma_point: 0.05
  pixel_border: -10 # Only in calib (negative means allow pixels outside image up to that distance)
  depth_eps: 1e-6 # Only in calib case
  filtering_mode: weighted_pointmap # recent, first, best_score, weighted_pointmap, weighted_spherical, indep_conf
  filtering_score: median # median, mean (only used for filtering_mode=best_score)

local_opt:
  pin: 1
  window_size: 1e+6   
  C_conf: 0.0
  Q_conf: 1.5
  min_match_frac: 0.1
  pixel_border: -10 # Only in calib (negative means allow pixels outside image up to that distance)
  depth_eps: 1e-6 # Only in calib case
  max_iters: 10
  sigma_ray: 0.003
  sigma_dist: 1e+1
  sigma_pixel: 1.0
  sigma_depth: 1e+1 # NOTE: log-depth!
  sigma_point: 0.05
  delta_norm: 1e-8
  use_cuda: True

retrieval:
  k: 3
  min_thresh: 5e-3

reloc:
  min_match_frac: 0.3
  strict: True

headless: True
save_dir: "slam_results"
save_interval: 0.3  # Save every 0.3 seconds

performance:
  use_gpu: True
  num_threads: 8 